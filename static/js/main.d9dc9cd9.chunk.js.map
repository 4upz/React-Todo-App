{"version":3,"sources":["components/Task.jsx","components/TaskList.jsx","components/TaskEntry.jsx","components/TodoApp.jsx","App.jsx","index.js"],"names":["Task","props","state","taskName","isCompleted","toggleCompletion","bind","this","setState","Checkbox","onChange","variantColor","size","borderColor","className","Component","TaskList","tasks","List","spacing","px","width","mx","textAlign","TaskEntry","newTask","submitNewTask","handleInput","handleKeyUp","event","target","value","preventDefault","addNewTask","keyCode","FormControl","marginTop","onKeyUp","FormLabel","htmlFor","Input","type","w","id","placeholder","aria-describedby","maxLength","TodoList","task","currentList","push","key","length","Flex","h","flexDir","App","ThemeProvider","Box","rounded","boxShadow","bg","Heading","color","mt","py","Text","Date","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAIqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAUF,EAAME,SAChBC,aAAa,GAEjB,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBANT,E,+DAUfC,KAAKC,SAAS,CAAEJ,aAAcG,KAAKL,MAAME,gB,+BAIzC,OACI,kBAACK,EAAA,EAAD,CACIC,SAAUH,KAAKF,iBACfM,aAAa,OACbC,KAAK,KACLC,YAAY,WACZC,UAAWP,KAAKL,MAAME,aAAgB,iBAErCG,KAAKL,MAAMC,c,GAvBMY,aCDbC,E,kDACjB,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAAEe,MAAOhB,EAAMgB,OAFb,E,qDAMf,OACI,kBAACC,EAAA,EAAD,CAAMC,QAAS,EAAGC,GAAG,IAAIC,MAAM,MAAMC,GAAG,OAAOC,UAAU,QACpDhB,KAAKL,MAAMe,W,GATUF,a,wBCEjBS,E,kDAEjB,WAAYvB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAAEuB,QAAS,IACxB,EAAKC,cAAgB,EAAKA,cAAcpB,KAAnB,gBACrB,EAAKqB,YAAc,EAAKA,YAAYrB,KAAjB,gBACnB,EAAKsB,YAAc,EAAKA,YAAYtB,KAAjB,gBALJ,E,wDASPuB,GACRtB,KAAKC,SAAS,CAAEiB,QAASI,EAAMC,OAAOC,U,oCAI5BF,GACVA,EAAMG,iBACNzB,KAAKN,MAAMgC,WAAW1B,KAAKL,MAAMuB,SAEjClB,KAAKC,SAAS,CAAEiB,QAAS,O,kCAIjBI,GA1BC,KA2BLA,EAAMK,SACN3B,KAAKmB,cAAcG,K,+BAKvB,OACI,kBAACM,EAAA,EAAD,CAAaC,UAAU,OAAOC,QAAS9B,KAAKqB,aAExC,kBAACU,EAAA,EAAD,CAAWC,QAAQ,cAAnB,4CAGA,kBAACC,EAAA,EAAD,CACIC,KAAK,OACLV,MAAOxB,KAAKL,MAAMuB,QAClBf,SAAUH,KAAKoB,YACfP,GAAG,IACHsB,EAAE,MACFpB,GAAG,KACHC,UAAU,SACVoB,GAAG,aACH9B,YAAY,WACZ+B,YAAY,4BACZC,mBAAiB,kBACjBC,UAAU,Y,GAjDS/B,aCClBgC,E,kDACjB,WAAY9C,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTe,MAAO,GACPQ,QAAS,IAJE,E,uDASRuB,GAEP,IAAIC,EAAc1C,KAAKL,MAAMe,MAC7BgC,EAAYC,KACR,kBAAChC,EAAA,EAAD,CAAUiC,IAAKF,EAAYG,QACvB,kBAAC,EAAD,CAAMjD,SAAU6C,MAGxBzC,KAAKC,SAAS,CAAES,MAAOgC,M,+BAIvB,OACI,kBAACI,EAAA,EAAD,CAAMvC,UAAU,cAAcwC,EAAE,MAAMC,QAAQ,UAC1C,kBAAC,EAAD,CAAUtC,MAAOV,KAAKL,MAAMe,QAC5B,kBAAC,EAAD,CACIQ,QAASlB,KAAKL,MAAMuB,QACpBQ,WAAY1B,KAAK0B,WAAW3B,KAAKC,a,GA3BfQ,a,uCCyBvByC,MAxBf,WACI,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK5C,UAAU,MAAM6C,QAAQ,KAAKC,UAAU,KAAKC,GAAG,SAChD,kBAACC,EAAA,EAAD,CACIhD,UAAU,aACViD,OAAK,EACLH,UAAU,KACVI,GAAI,EACJC,GAAI,GALR,cASA,kBAAC,EAAD,OAEJ,kBAACZ,EAAA,EAAD,CAAMvC,UAAU,UACZ,gCACI,kBAACoD,EAAA,EAAD,wBAWT,IAAIC,MAAOC,cAXF,mBClBpBC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.d9dc9cd9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Checkbox } from \"@chakra-ui/core\";\r\n\r\n// Represents a single task component\r\nexport default class Task extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            taskName: props.taskName, // The name of this task\r\n            isCompleted: false, // Whether the current task has been marked as completed\r\n        };\r\n        this.toggleCompletion = this.toggleCompletion.bind(this);\r\n    }\r\n\r\n    toggleCompletion() {\r\n        this.setState({ isCompleted: !this.state.isCompleted });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Checkbox\r\n                onChange={this.toggleCompletion}\r\n                variantColor=\"blue\"\r\n                size=\"lg\"\r\n                borderColor=\"gray.300\"\r\n                className={this.state.isCompleted &&  \"CompletedTask\"}\r\n            >\r\n                {this.state.taskName}\r\n            </Checkbox>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { List } from \"@chakra-ui/core\";\r\n\r\nexport default class TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { tasks: props.tasks };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <List spacing={3} px=\"0\" width=\"80%\" mx=\"auto\" textAlign=\"left\">\r\n                {this.state.tasks}\r\n            </List>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FormControl, Input, FormLabel } from \"@chakra-ui/core\";\r\n\r\nconst enterKey = 13;\r\n\r\nexport default class TaskEntry extends Component {\r\n    // Constructor for Controlled Form\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { newTask: \"\" };\r\n        this.submitNewTask = this.submitNewTask.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    }\r\n\r\n    // Keeps up with any value changes of the input so that it is reflected when the component is rendered via its state\r\n    handleInput(event) {\r\n        this.setState({ newTask: event.target.value });\r\n    }\r\n\r\n    // Handles the submission of the input based on the current value stored in its state\r\n    submitNewTask(event) {\r\n        event.preventDefault();\r\n        this.props.addNewTask(this.state.newTask);\r\n        // Make the text form empty again\r\n        this.setState({ newTask: \"\" });\r\n    }\r\n\r\n    // Check for when the 'enter' key is pressed\r\n    handleKeyUp(event) {\r\n        if (event.keyCode === enterKey) {\r\n            this.submitNewTask(event);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <FormControl marginTop=\"auto\" onKeyUp={this.handleKeyUp}>\r\n                {/* Text Box for New Task Submission */}\r\n                <FormLabel htmlFor=\"task-entry\">\r\n                    Type a new task below and press 'enter'.\r\n                </FormLabel>\r\n                <Input\r\n                    type=\"text\"\r\n                    value={this.state.newTask}\r\n                    onChange={this.handleInput}\r\n                    px=\"0\"\r\n                    w=\"90%\"\r\n                    mx=\"5%\"\r\n                    textAlign=\"center\"\r\n                    id=\"task-entry\"\r\n                    borderColor=\"gray.300\"\r\n                    placeholder=\"What's do you need to do?\"\r\n                    aria-describedby=\"task-entry-help\"\r\n                    maxLength=\"32\"\r\n                />\r\n            </FormControl>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Flex, ListItem } from \"@chakra-ui/core\";\r\nimport Task from \"./Task\";\r\nimport TaskList from \"./TaskList\";\r\nimport TaskEntry from \"./TaskEntry\";\r\n\r\nexport default class TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: [],\r\n            newTask: \"\",\r\n        };\r\n    }\r\n\r\n    // Adds a new Task to this component\r\n    addNewTask(task) {\r\n        // Adds task to the beginning of the list (Because we will display the newest tasks at the top of the list)\r\n        let currentList = this.state.tasks;\r\n        currentList.push(\r\n            <ListItem key={currentList.length}>\r\n                <Task taskName={task} />\r\n            </ListItem>\r\n        );\r\n        this.setState({ tasks: currentList });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Flex className=\"App-Content\" h=\"80%\" flexDir=\"column\">\r\n                <TaskList tasks={this.state.tasks} />\r\n                <TaskEntry\r\n                    newTask={this.state.newTask}\r\n                    addNewTask={this.addNewTask.bind(this)}\r\n                />\r\n            </Flex>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport TodoApp from \"./components/TodoApp\";\n/* Styling */\nimport \"./App.css\";\nimport { ThemeProvider, Heading, Text, Box, Flex } from \"@chakra-ui/core\";\n// import customTheme from \"./theme\";\n\nfunction App() {\n    return (\n        <ThemeProvider>\n            <Box className=\"App\" rounded=\"lg\" boxShadow=\"lg\" bg=\"white\">\n                <Heading\n                    className=\"App-Header\"\n                    color\n                    boxShadow=\"md\"\n                    mt={3}\n                    py={3}\n                >\n                    To-Do List\n                </Heading>\n                <TodoApp />\n            </Box>\n            <Flex className=\"Footer\">\n                <footer>\n                    <Text>Copyright &copy; {currentYear()} Arik Smith</Text>\n                </footer>\n            </Flex>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n\n/* Grabs the current year to display in the copyright footer */\nfunction currentYear() {\n    return new Date().getFullYear();\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\n// Renders all of the Components put together by app.jsx\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}